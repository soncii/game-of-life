module nextstate(
	input clk,
	input ingrid[47:0][79:0],
	output reg outgrid [47:0][79:0]
);

always @(posedge clk) begin
	for(integer i = 0; i < 48; i = i + 1) begin
		for(integer j = 0; j < 80; j = j + 1) begin
			int neighbours = 0;
			neighbours = neighbours + ingrid[(i + 47) % 48][(j + 79) % 80];
			neighbours = neighbours + ingrid[(i + 48) % 48][(j + 79) % 80];
			neighbours = neighbours + ingrid[(i + 49) % 48][(j + 79) % 80];
			neighbours = neighbours + ingrid[(i + 47) % 48][(j + 80) % 80];
			neighbours = neighbours + ingrid[(i + 49) % 48][(j + 80) % 80];
			neighbours = neighbours + ingrid[(i + 47) % 48][(j + 81) % 80];
			neighbours = neighbours + ingrid[(i + 48) % 48][(j + 81) % 80];
			neighbours = neighbours + ingrid[(i + 49) % 48][(j + 81) % 80];
			if(ingrid[i][j] == 1) begin
				if(neighbours < 2) begin
					outgrid[i][j] = 0;
				end
				else if(neighbours < 4) begin
					outgrid[i][j] = 1;
				end
				else begin
					outgrid[i][j] = 0;
				end
			end
			else begin
				if(neighbours == 3) begin
					outgrid[i][j] = 1;
				end
				else begin
					outgrid[i][j] = 0;
				end
			end
		end
	end
end

endmodule